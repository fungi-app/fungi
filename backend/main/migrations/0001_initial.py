# Generated by Django 5.0.2 on 2024-03-17 20:31

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import main.helpers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Name')),
                ('hex_code', models.CharField(max_length=7, unique=True, verbose_name='Hex code')),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Name')),
                ('latin_name', models.CharField(max_length=255, verbose_name='Latin name')),
                ('slug', models.SlugField(default=main.helpers.get_random_slug, max_length=32, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='uploads/images/', verbose_name='Image')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
            ],
        ),
        migrations.CreateModel(
            name='Mushroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Name')),
                ('latin_name', models.CharField(max_length=255, verbose_name='Latin name')),
                ('synonymous_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('slug', models.SlugField(default=main.helpers.get_random_slug, max_length=32, unique=True)),
                ('red_booked', models.BooleanField(verbose_name='Red booked')),
                ('description', models.TextField(verbose_name='Description')),
                ('eatable', models.CharField(choices=[('ne', 'Несъедобен'), ('pe', 'Полусъедобен'), ('e', 'Съедобнен')], default='ne', max_length=6)),
                ('have_foot', models.BooleanField(verbose_name='Have foot')),
                ('foot_size_from', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Foot size from')),
                ('foot_size_to', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Foot size to')),
                ('foot_type', models.CharField(choices=[('smooth', 'Гладкая'), ('ws', 'С юбкой'), ('tt', 'Утолщенная вверху'), ('tm', 'Утолщенная посередине'), ('tb', 'Утолщенная внизу')], default='smooth', max_length=6)),
                ('head_type', models.CharField(choices=[('convex', 'Выпуклая'), ('concave', 'Вогнутая'), ('smooth', 'Ровная')], default='convex', max_length=7)),
                ('hymenophore', models.CharField(choices=[('smooth', 'Гладкая'), ('spiky', 'Шипастая'), ('tubular', 'Трубчатая'), ('labyrinthine', 'Лабиринтовидная'), ('lamellar', 'Пластинчатая')], default='smooth', max_length=12)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated at')),
                ('doubles', models.ManyToManyField(blank=True, null=True, to='main.mushroom')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.family')),
                ('foot_color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='foot_color', to='main.color')),
                ('head_color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='head_color', to='main.color')),
            ],
        ),
        migrations.CreateModel(
            name='MushroomImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.media')),
                ('mushroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.mushroom')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=main.helpers.get_random_slug, max_length=32, unique=True)),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PublicationImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.media')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.publication')),
            ],
        ),
    ]
